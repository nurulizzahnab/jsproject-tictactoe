let board = {
    1: ' ',
    2: ' ',
    3: ' ',
    4: ' ',
    5: ' ',
    6: ' ',
    7: ' ',
    8: ' ',
    9: ' '
};

function printBoardkey() {
    console.log(Object.keys(board))
}

board[1] = "O"
console.log(board)

function printBoard(board) {
    console.log(` ${board[1]} | ${board[2]} | ${board[3]}`);
    console.log("-----------");
    console.log(` ${board[4]} | ${board[5]} | ${board[6]}`);
    console.log("-----------");
    console.log(` ${board[7]} | ${board[8]} | ${board[9]}`);
  }

printBoard(board)

let position = 5;
if(typeof(position) !== "number"){
    console.log("Wrong input")
}else{
    console.log("position is a number")
}


if(board[position] == " "){
    console.log("there is no value for this position")
} else {
    console.log("The position is already occupied. The value is " + board[5])
}

let winCombinations = [
    [1, 2, 3],[4,5,6],[7,8,9],[1,4,7],[2,5,8],[3,6,9],[1,5,9],[3,5,7]
];

let player1 = [[1,2,3],[4,5,6],[7,8,9]];

function checkWin(player) {
    const match_combo = winCombinations.filter(x => player.includes(x));
    return match_combo.length > 0;
}

checkWin(player1)

